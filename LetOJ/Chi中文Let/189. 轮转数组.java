
/*
 * 
link: https://leetcode-cn.com/problems/rotate-array/

189. 轮转数组
难度
中等

1297

收藏

分享
切换为英文
接收动态
反馈
给你一个数组，将数组中的元素向右轮转 k 个位置，其中 k 是非负数。

 

示例 1:

输入: nums = [1,2,3,4,5,6,7], k = 3
输出: [5,6,7,1,2,3,4]
解释:
向右轮转 1 步: [7,1,2,3,4,5,6]
向右轮转 2 步: [6,7,1,2,3,4,5]
向右轮转 3 步: [5,6,7,1,2,3,4]
示例 2:

输入：nums = [-1,-100,3,99], k = 2
输出：[3,99,-1,-100]
解释: 
向右轮转 1 步: [99,-1,-100,3]
向右轮转 2 步: [3,99,-1,-100]
 

提示：

1 <= nums.length <= 105
-231 <= nums[i] <= 231 - 1
0 <= k <= 105
 

进阶：

尽可能想出更多的解决方案，至少有 三种 不同的方法可以解决这个问题。
你可以使用空间复杂度为 O(1) 的 原地 算法解决这个问题吗？



2022-01-30 at 21:25
 

刚看到想到的思路是什么？：


意识到的边界条件是什么？：


考虑到的速度和空间复杂度是多少？：


对题目易错地方进行总结:


对题目的实现思路进行几句话总结:


从这道题目学到了什么，哪些地方需要提升? :

 * 
 */


class Solution {
    public void rotate(int[] nums, int k) {
        int[] copy=new int[nums.length];

        //拷贝数组
        for(int i=0;i<nums.length;i++){
            copy[i]=nums[i];
        }

        for(int i=0;i<nums.length;i++){
            //不能搞反了下标
            nums[(i+k)%nums.length]=copy[i];
        }
    }
}



















